Å
QC:\dev-personal\double-entry-exploring\src\DoubleEntry.Domain\Entities\Account.cs
	namespace 	
DoubleEntry
 
. 
Domain 
. 
Entities %
{ 
public 

class 
Account 
: 

BaseEntity %
{		 
public

 
string

 
Description

 !
{

" #
get

$ '
;

' (
}

( )
public 
string 
Code 
{ 
get  
;  !
}! "
public 
List 
< 
Entry 
> 
Entries "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
Account 
( 
string 
description )
,) *
string+ 1
code2 6
)6 7
{ 	
if 
( 
description 
. 
IsNullOrEmpty )
() *
)* +
||, .
code/ 3
.3 4
IsNullOrEmpty4 A
(A B
)B C
)C D
throw 
new 
ArgumentException +
(+ ,
$str, S
)S T
;T U
Entries 
= 
new 
List 
< 
Entry $
>$ %
(% &
)& '
;' (
Description 
= 
description %
;% &
Code 
= 
code 
; 
} 	
public 
decimal 
GetAccountBalance (
(( )
)) *
=>+ -
Entries. 5
.5 6
Sum6 9
(9 :
x: ;
=>< >
x? @
.@ A
AmountA G
)G H
;H I
public 
string &
GetFormattedAccountBalance 0
(0 1
)1 2
=>3 5
Entries6 =
. 
Sum 
( 
x 
=> 
x 
. 
Amount 
) 
. 
ToAccountingFormat 
(  
)  !
;! "
} 
} Ë
TC:\dev-personal\double-entry-exploring\src\DoubleEntry.Domain\Entities\BaseEntity.cs
	namespace 	
DoubleEntry
 
. 
Domain 
. 
Entities %
{ 
public 

class 

BaseEntity 
{ 
public 
Guid 
Id 
{ 
get 
; 
set !
;! "
}# $
public 
DateTime 
	CreatedAt !
{" #
get$ '
;' (
set) ,
;, -
}. /
public

 

BaseEntity

 
(

 
)

 
{ 	
Id 
= 
Guid 
. 
NewGuid 
( 
) 
;  
	CreatedAt 
= 
DateTime  
.  !
Now! $
;$ %
} 	
} 
} ”
OC:\dev-personal\double-entry-exploring\src\DoubleEntry.Domain\Entities\Entry.cs
	namespace 	
DoubleEntry
 
. 
Domain 
. 
Entities %
{ 
public 

enum 
	EntryType 
{ 
Debt 
, 
Credit 
}		 
public 

class 
Entry 
: 

BaseEntity #
{ 
public 
Guid 
	AccountId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
decimal 
Amount 
{ 
get  #
;# $
}% &
public 
	EntryType 
Type 
{ 
get  #
;# $
}% &
public 
DateTime 
CompetenceDate &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
string 
Description !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
Entry 
( 
decimal 
amount #
)# $
{ 	
if 
( 
amount 
== 
$num 
) 
throw 
new 
ArgumentException +
(+ ,
$str, C
)C D
;D E
if 
( 
amount 
> 
$num 
) 
Type 
= 
	EntryType  
.  !
Debt! %
;% &
if 
( 
amount 
< 
$num 
) 
Type 
= 
	EntryType  
.  !
Credit! '
;' (
Amount 
= 
amount 
; 
} 	
}   
}!! 